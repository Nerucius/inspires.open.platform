# Generated by Django 2.1.7 on 2019-04-07 11:28

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('backend', '0015_project-phase'),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.PositiveSmallIntegerField()),
                ('name', models.CharField(max_length=1024)),
            ],
        ),
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_evaluations', related_query_name='created_evaluation', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modified_evaluations', related_query_name='modified_evaluation', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(blank=True, help_text='Owner of the instance. This user will be able to edit the            instance or even delete it.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='owned_evaluations', related_query_name='owned_evaluation', to=settings.AUTH_USER_MODEL)),
                ('participation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.Participation')),
                ('phase', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.ProjectAtPhase')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.CharField(max_length=8, primary_key=True, serialize=False)),
                ('axis', models.CharField(choices=[('SCIENCE', 'Science'), ('COLLECTIVE', 'Collective'), ('INDIVIDUAL', 'Individual')], max_length=32)),
                ('principle', models.CharField(choices=[('KNOWLEDGE', 'Knowledge Democracy'), ('CITIZEN', 'Citizen-led Research'), ('PARTICIPATION', 'Participatory Dynamics'), ('TRANSFORM', 'Transformative Change'), ('INTEGRITY', 'Integrity')], max_length=32)),
                ('dimension', models.CharField(choices=[('COLLECTIVE', 'Collective capacity'), ('ALIGNEMENT', 'Community alignment'), ('ENGAGEMENT', 'Degree of engagement'), ('EXPECTATION', 'Expectation alignment'), ('GENDER', 'Gender perspective'), ('PARTICIPATION_IMPACT', 'Impact of the participatory dynamics'), ('INCLUSIVITY', 'Inclusivity'), ('KNOWLEDGE', 'Knowledge and skills'), ('MOTIVATION', 'Motivation'), ('OPENNESS', 'Openness'), ('POLICY_IMPACT', 'Policy impact'), ('REFLEXIVITY', 'Reflexivity'), ('RESOURCES', 'Resource availability'), ('RESPONSIVENESS', 'Responsiveness to community alignment'), ('SATISFACTION', 'Satisfaction with the participatory dynamics'), ('RELEVANCE', 'Scientific relevance'), ('SELFIMPROVE', 'Self-improvement'), ('TRANSDISCIPLINAR', 'Transdisciplinarity'), ('TRANSPARENCY', 'Transparency')], max_length=32)),
                ('name', models.CharField(max_length=1024)),
                ('answer_type', models.CharField(choices=[('MULTIPLE', 'Multiple Choice'), ('DEGREE', 'Degree')], max_length=32)),
                ('answer_range', models.PositiveSmallIntegerField()),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Response',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True, null=True)),
                ('answer_text', models.CharField(blank=True, max_length=1024)),
                ('answer_degree', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('answer_choice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.Answer')),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_responses', related_query_name='created_response', to=settings.AUTH_USER_MODEL)),
                ('evaluation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.Evaluation')),
                ('modified_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modified_responses', related_query_name='modified_response', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(blank=True, help_text='Owner of the instance. This user will be able to edit the            instance or even delete it.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='owned_responses', related_query_name='owned_response', to=settings.AUTH_USER_MODEL)),
                ('question', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.Question')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AlterField(
            model_name='projectphase',
            name='order',
            field=models.PositiveSmallIntegerField(),
        ),
        migrations.AddField(
            model_name='question',
            name='phase',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.ProjectPhase'),
        ),
        migrations.AddField(
            model_name='question',
            name='role',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.ParticipationRole'),
        ),
    ]
